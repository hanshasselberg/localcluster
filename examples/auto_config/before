#!/usr/bin/env bash

rm *.pem
consul tls ca create
consul tls cert create -dc dc1 -server
consul tls cert create -dc dc2 -server

# setup tokens for each dc and client. assuming 2 dcs with each 5 clients.
for i in 1 2; do
	for j in 1 2 3 4 5; do
		token=$(secint mint -issuer auto-config-cluster -ttl 1h -node c${j} -priv-key dc${i}-server-consul-0-key.pem -audience audience)
		# inject token into consul connect ca config
		cp examples/auto_config/client.json examples/auto_config/client_dc${i}_c${j}.json
		sed -i.bu "s/\"intro_token\":.*/\"intro_token\": \"$token\"/" examples/auto_config/client_dc${i}_c${j}.json
	done
done
rm -rf examples/auto_config/*.bu

# setup public keys for each dc - reusing the public key for TLS, just because it is already there
export pub=$(cat dc1-server-consul-0.pem | perl -e 'while(<>) { $_ =~ s/[\r\n]/\\n/g; print "$_" }')
cat examples/auto_config/server_dc1.json | perl -e 'while(<>) { $_ =~ s/"jwt_validation_pub_keys":.*/"jwt_validation_pub_keys": ["$ENV{pub}"],/; print "$_" }' > examples/auto_config/server_dc1.json.new

export pub=$(cat dc2-server-consul-0.pem | perl -e 'while(<>) { $_ =~ s/[\r\n]/\\n/g; print "$_" }')
cat examples/auto_config/server_dc2.json | perl -e 'while(<>) { $_ =~ s/"jwt_validation_pub_keys":.*/"jwt_validation_pub_keys": ["$ENV{pub}"],/; print "$_" }' > examples/auto_config/server_dc2.json.new

mv examples/auto_config/server_dc1.json{.new,}
mv examples/auto_config/server_dc2.json{.new,}

